---
# Source: fluentd-coralogix/charts/fluentd/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: fluentd-coralogix
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  volumes:
    - 'configMap'
    - 'secret'
    - 'hostPath'
  runAsUser:
    rule: 'RunAsAny'    
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
---
# Source: fluentd-coralogix/charts/fluentd/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-coralogix
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: fluentd-coralogix/charts/fluentd/templates/files.conf/prometheus.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
  name: fluentd-prometheus-conf
data:
  prometheus.conf: |-
    <source>
      @type prometheus
      @id in_prometheus
      bind "0.0.0.0"
      port 24231
      metrics_path "/metrics"
    </source>

    <source>
      @type prometheus_monitor
      @id in_prometheus_monitor
    </source>

    <source>
      @type prometheus_output_monitor
      @id in_prometheus_output_monitor
    </source>
---
# Source: fluentd-coralogix/charts/fluentd/templates/files.conf/systemd.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
  name: fluentd-systemd-conf
data:
  systemd.conf: |-
    <source>
      @type systemd
      @id in_systemd_internal_kubernetes
      @label @KUBERNETES_SYSTEM
      matches [{"_SYSTEMD_UNIT":"kubelet.service"},{"_SYSTEMD_UNIT":"kube-apiserver.service"},{"_SYSTEMD_UNIT":"kube-controller-manager.service"},{"_SYSTEMD_UNIT":"kube-proxy.service"},{"_SYSTEMD_UNIT":"kube-scheduler.service"}]
      read_from_head true
      tag "internal-kubernetes.systemd"
      <storage>
        @type "local"
        persistent true
        path "/var/log/fluentd-journald-internal_kubernetes-cursor.json"
      </storage>
      <entry>
        fields_strip_underscores true
        field_map {"MESSAGE": "message", "_TRANSPORT": "stream", "_SYSTEMD_UNIT": "systemd_unit", "_HOSTNAME": "hostname"}
        field_map_strict true
      </entry>
    </source>

    <source>
      @type systemd
      @id in_systemd_etcd
      @label @KUBERNETES_SYSTEM
      matches [{"_SYSTEMD_UNIT":"etcd.service"}]
      read_from_head true
      tag "etcd.systemd"
      <storage>
        @type "local"
        persistent true
        path "/var/log/fluentd-journald-internal_etcd-cursor.json"
      </storage>
      <entry>
        fields_strip_underscores true
        field_map {"MESSAGE": "message", "_TRANSPORT": "stream", "_SYSTEMD_UNIT": "systemd_unit", "_HOSTNAME": "hostname"}
        field_map_strict true
      </entry>
    </source>

    <label @KUBERNETES_SYSTEM>
      <filter internal-kubernetes.systemd>
        @type parser
        key_name message
        <parse>
          @type regexp
          expression /^(?<level>[a-zA-Z])[0-9]* ([\d:.]+)\s+\d+ (?<file>[a-zA-Z-_.]+):(?<line>[\d]+)\]\s+(?<log>.*)$/
        </parse>
        reserve_data true
        reserve_time true
      </filter>

      <filter etcd.systemd>
        @type parser
        key_name message
        <parse>
          @type regexp
          expression /^([^ ]+\s[^ ]+) (?<level>[A-Z]) \| (?<component>[a-zA-Z-_.]+): (?<log>.*)$/
        </parse>
        reserve_data true
        reserve_time true
      </filter>

      <filter **>
        @type record_transformer
        enable_ruby
        <record>
          raw ${record["message"]}
        </record>
        remove_keys message
      </filter>

      <match **>
        @type relabel
        @label @DISPATCH
      </match>
    </label>
---
# Source: fluentd-coralogix/charts/fluentd/templates/fluentd-configurations-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
data:
  01_sources.conf: |-
    
  02_filters.conf: |-
    
  03_dispatch.conf: |-
    
  04_outputs.conf: |-
    
  coralogix.conf: |-
    <system>
      log_level "#{ENV['LOG_LEVEL']}"
    </system>
    
    <source>
      @type tail
      @id in_tail_container_logs
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head false
      <parse>
        @type cri
      </parse>
    </source>
    
    <filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
      skip_labels false
      skip_container_metadata false
      skip_namespace_metadata true
      skip_master_url true
    </filter>
    
    <filter kubernetes.**>
      @type record_transformer
      remove_keys "$['message']"
      <record>
        log_obj ${record["message"]}
      </record>
    </filter>
    
    <match **>
      @type relabel
      @label @DISPATCH
    </match>
    
    <label @DISPATCH>
      <filter **>
        @type prometheus
        <metric>
          name fluentd_input_status_num_records_total
          type counter
          desc The total number of incoming records
        </metric>
      </filter>
      
      <match internal-kubernetes.systemd>
        @type           coralogix
        endpoint        "#{ENV['ENDPOINT']}"
        privatekey      "#{ENV['PRIVATE_KEY']}"
        appname         "#{ENV['APP_NAME_SYSTEMD']}"
        subsystemname   "#{ENV['SUB_SYSTEM_SYSTEMD']}"
        is_json         true
      </match>
      
      <match kubernetes.**>
        @type           coralogix
        endpoint        "#{ENV['ENDPOINT']}"
        privatekey      "#{ENV['PRIVATE_KEY']}"
        appname         "#{ENV['APP_NAME']}"
        subsystemname   "#{ENV['SUB_SYSTEM']}"
        is_json         true
      </match>
    </label>
---
# Source: fluentd-coralogix/charts/fluentd/templates/fluentd-configurations-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-main
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
data:
  fluent.conf: |-
    # do not collect fluentd logs to avoid infinite loops.
    <label @FLUENT_LOG>
      <match **>
        @type null
        @id ignore_fluent_logs
      </match>
    </label>

    @include config.d/*.conf
    @include fluentd-prometheus-conf.d/*
    @include fluentd-systemd-conf.d/*
---
# Source: fluentd-coralogix/charts/fluentd/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd-coralogix
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resourceNames:
      - fluentd-coralogix
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
# Source: fluentd-coralogix/charts/fluentd/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd-coralogix
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd-coralogix
subjects:
  - kind: ServiceAccount
    name: fluentd-coralogix
    namespace: default
---
# Source: fluentd-coralogix/charts/fluentd/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: fluentd-coralogix
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 24231
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
---
# Source: fluentd-coralogix/charts/fluentd/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-coralogix
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fluentd
      app.kubernetes.io/instance: fluentd-coralogix
  template:
    metadata:
      annotations:
        checksum/config: b8dc546378828c21b3828551eb65ac9267f1644730b25ae587fe1d33b236e35d
      labels:
        app.kubernetes.io/name: fluentd
        app.kubernetes.io/instance: fluentd-coralogix
    spec:
      
      serviceAccountName: fluentd-coralogix
      securityContext:
        {}
      containers:
        - name: fluentd
          securityContext:
            {}
          image: "coralogixrepo/coralogix-fluentd-multiarch:v0.0.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: APP_NAME
              value: amit1
            - name: SUB_SYSTEM
              value: amit2
            - name: APP_NAME_SYSTEMD
              value: systemd
            - name: SUB_SYSTEM_SYSTEMD
              value: kubelet.service
            - name: ENDPOINT
              value: api.eu2.coralogix.com
            - name: FLUENTD_CONF
              value: ../../etc/fluent/fluent.conf
            - name: LOG_LEVEL
              value: error
            - name: MAX_LOG_BUFFER_SIZE
              value: 12582912
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - secretRef:
                name: integrations-privatekey
          ports:
          - name: metrics
            containerPort: 24231
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
          resources:
              limits:
                cpu: 800m
                memory: 900Mi
              requests:
                cpu: 800m
                memory: 900Mi
          volumeMounts:
            - mountPath: /var/log
              name: varlog
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
            - mountPath: /etc/fluent
              name: etcfluentd-main
            - mountPath: /etc/fluent/config.d/
              name: etcfluentd-config
            - name: fluentd-custom-cm-fluentd-prometheus-conf
              mountPath: /etc/fluent/fluentd-prometheus-conf.d
            - name: fluentd-custom-cm-fluentd-systemd-conf
              mountPath: /etc/fluent/fluentd-systemd-conf.d
      volumes:
        - hostPath:
            path: /var/log
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers
        - configMap:
            defaultMode: 511
            name: fluentd-main
          name: etcfluentd-main
        - configMap:
            defaultMode: 511
            name: fluentd-config
          name: etcfluentd-config
        - name: fluentd-custom-cm-fluentd-prometheus-conf
          configMap:
            name: fluentd-prometheus-conf
            defaultMode: 0777
        - name: fluentd-custom-cm-fluentd-systemd-conf
          configMap:
            name: fluentd-systemd-conf
            defaultMode: 0777
      tolerations:
        - operator: Exists
---
# Source: fluentd-coralogix/charts/fluentd/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "fluentd-coralogix-test-connection"
  labels:
    helm.sh/chart: fluentd-0.3.1
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/instance: fluentd-coralogix
    app.kubernetes.io/version: "v1.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['fluentd-coralogix:']
  restartPolicy: Never
